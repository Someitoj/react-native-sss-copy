package com.sss

import android.util.Log

import com.facebook.react.bridge.ReactApplicationContext
import com.facebook.react.bridge.ReactContextBaseJavaModule
import com.facebook.react.module.annotations.ReactModule
import com.facebook.react.bridge.ReactMethod
import com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder

@ReactModule(name = SssModule.NAME)
class SssModule(reactContext: ReactApplicationContext) :
  NativeSssSpec(reactContext) { //NativeSssSpec is generated by codegen

  override fun getName(): String {
    return NAME
  }

  companion object {
    const val NAME = "Sss"

    init {
      System.loadLibrary("react-native-sss")
    }
  }

  private external fun nativeInstall(jsiRuntimeRef: Long, jsCallInvokerHolder: CallInvokerHolder?)

  @ReactMethod(isBlockingSynchronousMethod = true)
  override fun install(): Boolean {
    val jsContext = reactApplicationContext.javaScriptContextHolder

    try {
      if (jsContext == null) {
        Log.e(NAME, "React Application Context was null!")
        return false
      }
      val jsiRuntimeRef = jsContext!!.get()
      val jsCallInvokerHolder = reactApplicationContext.catalystInstance.jsCallInvokerHolder

      nativeInstall(jsiRuntimeRef, jsCallInvokerHolder)

      return true
    } catch (exception: Exception) {
      Log.e(NAME, "Failed to initialize react-native-sss!", exception)

    }

    return false
  }
}
